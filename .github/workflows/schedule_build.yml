name: Openwrt Build Schedule
on:
  workflow_dispatch: 
    inputs:
      skip: 
          description: '跳过更新版本文件步骤'
          required: true
          type: boolean
          default: true
  schedule:
    - cron: "0 16 * * *"
jobs:
  parallel:
    strategy:
      matrix:
        include:
          - target: 'x86'
            config: 'x86_64'
          - target: 'vplus'
            config: 'armv8'
          - target: 's905d'
            config: 'armv8_full'
          - target: 'r3g'
            config: 'r3g'
          - target: 'rm2100'
            config: 'rm2100'
    uses: codercaizh/openwrt_package/.github/workflows/build.yml@master
    with:
      target: ${{ matrix.target }}
      config: ${{ matrix.config }}

  clean_workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Clean workflow
        uses: Mattraks/delete-workflow-runs@v2.0.3
        with:
          retain_days: 2
       
  upgrade_version_file:
    if: ${{ !inputs.skip }}
    needs: [parallel]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Upgrade version
        run: |
          git config user.name robot
          git config user.email 545347837@qq.com
          git pull
          echo -e '# 此文件用于配置编译时使用的openwrt源码版本以及插件版本，若没有配置或文件不存着，在默认使用最新的代码编译\n# 问：为什么要有这个版本号机制而不是默认就使用最新版本编译\n# 答：由于OP和插件源码更新非常频繁，部分更新可能会导致编译失败，所以需要有一个Release的版本机制，记录百分百能够编出来的版本' > version.sh
          echo 'OPENWRT_VER=${{ needs.parallel.outputs.OPENWRT_VER }}' >> version.sh
          echo 'OPENWRT_COMMIT_ID=${{ needs.parallel.outputs.OPENWRT_COMMIT_ID }}' >> version.sh
          echo 'OPENWRT_PACKAGES_COMMIT_ID=${{ needs.parallel.outputs.OPENWRT_PACKAGES_COMMIT_ID }}' >> version.sh
          echo 'PASSWALL_PACKAGE_COMMIT_ID=${{ needs.parallel.outputs.PASSWALL_PACKAGE_COMMIT_ID }}' >> version.sh
          echo 'SMALL_PACKAGE_COMMIT_ID=${{ needs.parallel.outputs.SMALL_PACKAGE_COMMIT_ID }}' >> version.sh
          cat version.sh
          diffInfo=`git diff` 
          if [ "$diffInfo" = "" ]; then
            echo '当前已是最新版本'
            exit
          fi
          git add .
          git commit -m "upgrade version to ${{ needs.parallel.outputs.OPENWRT_VER }}"
          git push --force


